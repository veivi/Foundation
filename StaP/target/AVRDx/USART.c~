#include "USART.h"
#include "StaP.h"

/* Compute the baud rate */
#define USART0_BAUD_RATE(r) (((float)F_CPU * 64 / (16 * (float)r)) + 0.5)

USART_t *USART_Table[] = { &USART0, &USART1, &USART2 };

void USART_Init(uint8_t index, uint32_t rate, uint8_t mode)
{
  USART_Table[index]->CTRLC = USART_CHSIZE_8BIT_gc;
  USART_SetRate(index, rate);
  USART_SetMode(index, mode);
}

void USART_SetRate(uint8_t index, uint32_t rate)
{
    USART_Table[index]->BAUD = (uint16_t) USART0_BAUD_RATE(rate);
}

void USART_SetMode(uint8_t index, uint8_t mode)
{
    uint8_t ctrlA = 0, ctrlB = 0;
    
    if(mode & LINK_MODE_RX) {
        ctrlA |= USART_RXCIE_bm;
        ctrlB |= USART_RXEN_bm;
    }
    
    if(mode & LINK_MODE_TX)
      ctrlB |= USART_TXEN_bm;

    USART_Table[index]->CTRLB = ctrlB;
    USART_Table[index]->CTRLA = ctrlA;
}

/* This function transmits one byte through USART */
void USART_Transmit(uint8_t index, const uint8_t *data, uint8_t size)
{
  while(size-- > 0) {
    /* Check if USART buffer is ready to transmit data */
    while (!(USART_Table[index]->STATUS & USART_DREIF_bm));
    /* Transmit data using TXDATAL register */
    USART_Table[index]->TXDATAL = *data++;
  }
}

void USART_Drain(uint8_t index, VPBuffer_t *buffer)
{
  if(!(USART_Table[index]->CTRLB & USART_TXEN_bm))
    return;

  if(USART_Table[index]->CTRLA & USART_DREIE_bm)
    // Wait until the buffer is empty
    while(VPBUFFER_GAUGE(*buffer) > 0);

  // Wait until last frame is transmitted
  
  while(!(USART_Table[index]->STATUS & USART_TXCIF_bm));  
}

void USART_TransmitStart(uint8_t index, VPBuffer_t *buffer)
{
  if(USART_Table[index]->CTRLA & USART_DREIE_bm)
    // We're already transmitting on the interrupt, do nothing
    return;
  
  // Transmit up to 2 bytes immediately
      
  if(USART_Table[index]->STATUS & USART_DREIF_bm)
    USART_Table[index]->TXDATAL = vpbuffer_extractChar(buffer);

  if(VPBUFFER_GAUGE(*buffer) && (USART_Table[index]->STATUS & USART_DREIF_bm))
    USART_Table[index]->TXDATAL = vpbuffer_extractChar(buffer);
      
  // The rest will be transmitted by the worker on the interrupt
  
  if(VPBUFFER_GAUGE(*buffer))
    USART_Table[index]->CTRLA |= USART_DREIE_bm;
}



